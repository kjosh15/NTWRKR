MIME-Version: 1.0
Date: Thu, 25 Jun 2020 08:06:53 +0000
References: <CACNgykNUEwJhYqJajiHv=YkBZPyjKURiUKE8rh9atHK9UJ53rA@mail.gmail.com>
	<006b01d64a20$7e3db330$7ab91990$@indigometrics.com>
In-Reply-To: <006b01d64a20$7e3db330$7ab91990$@indigometrics.com>
Message-ID: <CACNgykO6q=MqMik8taA9nxD6odv3cDJzOxrBP=hpKO-Eqea5-A@mail.gmail.com>
Subject: Re: compliance, higher level
From: Josh Klein <josh@josh.is>
To: Chris at Indigo <chris@indigometrics.com>
Content-Type: multipart/alternative; boundary="00000000000081efea05a8e413ad"

--00000000000081efea05a8e413ad
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

I think we can use a contractor, certainly - there are IP issues, but
nothing unusual or that can't be managed in the contract.

To make the front OR back ends serverless would require starting over; it's
an entirely different application design.

For the front end, I'd suggest we wait until we have solid feedback from
both Bechtel and BSS so we know where to start with the UX/UI concerns.

The back end could be re-developed right now, but as it's the centralized
repository that all front ends connect to I'm not sure I'd want to
rearchitect it separately. Worth having a conversation with developers who
know cloud deployments well in the meantime, though! I'll put out some
feelers and see if I can get some counsel.

- J

On Wed, Jun 24, 2020 at 12:11 PM <chris@indigometrics.com> wrote:

> How much would a developer cost to execute this for us? Can we do it with
> a contractor, or do we need an employee to control the IP? How do we
> transition away from Liquid =E2=80=93 is this a case of binning the Liqui=
d front
> end VM and starting again =E2=80=93 or putting a new wrapper on the curre=
nt front
> end (and back end)?
>
> C
>
>
>
> *From:* Josh Klein <josh@josh.is>
> *Sent:* 24 June 2020 12:06
> *To:* Chris at Indigo <chris@indigometrics.com>
> *Subject:* compliance, higher level
>
>
>
> Chris,
>
> Been digging through some of the compliance info for AWS and think we'd b=
e
> well served to move to as light an AWS layer as possible as soon as
> possible. Note this doesn't mean to skip where we're at now - an AWS host=
ed
> instance for the front and back end makes good sense given our current
> number of clients.
>
> But moving to a lighter front end, where we're not hosting a VM but rathe=
r
> an application, means that Amazon picks up a lot more of the
> support/security lift. This means we're responsible for the application
> security and data, only. Lambda never looked more interesting.
>
> Similarly for our backend infrastructure - if we can move most of it to a
> dynamic data store and API (with AWS doing all the email sourcing) our
> attack surface decreases significantly. Based on our conversations our
> backend application is fairly light anyway: it may be possible to trim it
> down even further to the point of being able to simply roll out new data
> models as needed.
>
> Put another way, being responsible for an entire operating system (even o=
n
> a VM) entails a host of security risks; patches, updates, ongoing
> configuration tweaks, etc. Reducing that load to an application further
> decreases our risk and makes rolling out new versions even easier. Worth
> thinking about!
>
> - J
>

--00000000000081efea05a8e413ad
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>I think we can use a contractor, certainly - there ar=
e IP issues, but nothing unusual or that can&#39;t be managed in the contra=
ct. <br></div><div><br></div><div>To make the front OR back ends serverless=
 would require starting over; it&#39;s an entirely different application de=
sign. <br></div><div><br></div><div>For the front end, I&#39;d suggest we w=
ait until we have solid feedback from both Bechtel and BSS so we know where=
 to start with the UX/UI concerns.<br></div><div><br></div><div>The back en=
d could be re-developed right now, but as it&#39;s the centralized reposito=
ry that all front ends connect to I&#39;m not sure I&#39;d want to rearchit=
ect it separately. Worth having a conversation with developers who know clo=
ud deployments well in the meantime, though! I&#39;ll put out some feelers =
and see if I can get some counsel.<br></div><div><br></div><div>- J<br></di=
v></div><br><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_attr=
">On Wed, Jun 24, 2020 at 12:11 PM &lt;<a href=3D"mailto:chris@indigometric=
s.com">chris@indigometrics.com</a>&gt; wrote:<br></div><blockquote class=3D=
"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(2=
04,204,204);padding-left:1ex"><div lang=3D"EN-GB"><div class=3D"gmail-m_224=
4588273628552794WordSection1"><p class=3D"MsoNormal"><span>How much would a=
 developer cost to execute this for us? Can we do it with a contractor, or =
do we need an employee to control the IP? How do we transition away from Li=
quid =E2=80=93 is this a case of binning the Liquid front end VM and starti=
ng again =E2=80=93 or putting a new wrapper on the current front end (and b=
ack end)?<u></u><u></u></span></p><p class=3D"MsoNormal"><span>C<u></u><u><=
/u></span></p><p class=3D"MsoNormal"><span><u></u>=C2=A0<u></u></span></p><=
div style=3D"border-color:rgb(225,225,225) currentcolor currentcolor;border=
-style:solid none none;border-width:1pt medium medium;padding:3pt 0cm 0cm">=
<p class=3D"MsoNormal"><b><span lang=3D"EN-US">From:</span></b><span lang=
=3D"EN-US"> Josh Klein &lt;<a href=3D"mailto:josh@josh.is" target=3D"_blank=
">josh@josh.is</a>&gt; <br><b>Sent:</b> 24 June 2020 12:06<br><b>To:</b> Ch=
ris at Indigo &lt;<a href=3D"mailto:chris@indigometrics.com" target=3D"_bla=
nk">chris@indigometrics.com</a>&gt;<br><b>Subject:</b> compliance, higher l=
evel<u></u><u></u></span></p></div><p class=3D"MsoNormal"><u></u>=C2=A0<u><=
/u></p><div><p class=3D"MsoNormal">Chris,<br><br>Been digging through some =
of the compliance info for AWS and think we&#39;d be well served to move to=
 as light an AWS layer as possible as soon as possible. Note this doesn&#39=
;t mean to skip where we&#39;re at now - an AWS hosted instance for the fro=
nt and back end makes good sense given our current number of clients. <br><=
br>But moving to a lighter front end, where we&#39;re not hosting a VM but =
rather an application, means that Amazon picks up a lot more of the support=
/security lift. This means we&#39;re responsible for the application securi=
ty and data, only. Lambda never looked more interesting.<br><br>Similarly f=
or our backend infrastructure - if we can move most of it to a dynamic data=
 store and API (with AWS doing all the email sourcing) our attack surface d=
ecreases significantly. Based on our conversations our backend application =
is fairly light anyway: it may be possible to trim it down even further to =
the point of being able to simply roll out new data models as needed.<br><b=
r>Put another way, being responsible for an entire operating system (even o=
n a VM) entails a host of security risks; patches, updates, ongoing configu=
ration tweaks, etc. Reducing that load to an application further decreases =
our risk and makes rolling out new versions even easier. Worth thinking abo=
ut!<br><br>- J<u></u><u></u></p></div></div></div></blockquote></div>

--00000000000081efea05a8e413ad--